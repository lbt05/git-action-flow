name: GitOps Update Yaml

on:
  workflow_call:
    secrets:
      PAT_TOKEN:
        required: true
    inputs:
      yamlFile:
        required: true
        type: string
      questionsFile:
        required: false
        type: string
      projectVersionFile:
        required: false
        type: string
      propertyPath:
        required: true
        type: string
      value:
        required: true
        type: string
      commitMessage:
        required: true
        type: string
      repository:
        required: false
        type: string
      headRef:
        required: false
        type: string
      branch:
        required: false
        type: string
      taggingMessage:
        required: false
        type: string

jobs:
  gitops-update-yaml:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        # Optional. The caller repository will be checked out when empty
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.headRef }}
        token: ${{ secrets.PAT_TOKEN }}

    - name: Get image tag
      id: getImageTag
      uses: mikefarah/yq@master
      with:
        cmd: yq eval '.${{ inputs.propertyPath }}' ${{ inputs.yamlFile }}

    - name: Update values.yaml (${{ steps.getImageTag.outputs.result }} → ${{ inputs.value }})
      run: |
        echo ${{ steps.getImageTag.outputs.result }}
        sed -i 's/${{ steps.getImageTag.outputs.result }} ## ${{ inputs.propertyPath }}/${{ inputs.value }} ## ${{ inputs.propertyPath }}/g' ${{ inputs.yamlFile }}
        sed -i 's/"${{ steps.getImageTag.outputs.result }}" ## ${{ inputs.propertyPath }}/"${{ inputs.value }}" ## ${{ inputs.propertyPath }}/g' ${{ inputs.yamlFile }}

    - name: Update questions.yaml (${{ steps.getImageTag.outputs.result }} → ${{ inputs.value }})
      if: inputs.questionsFile != ''
      run: |
        echo ${{ steps.getImageTag.outputs.result }}
        sed -i 's/${{ steps.getImageTag.outputs.result }} ## ${{ inputs.propertyPath }}/${{ inputs.value }} ## ${{ inputs.propertyPath }}/g' ${{ inputs.questionsFile }}
        sed -i 's/"${{ steps.getImageTag.outputs.result }}" ## ${{ inputs.propertyPath }}/"${{ inputs.value }}" ## ${{ inputs.propertyPath }}/g' ${{ inputs.questionsFile }}

    - name: Update Node.js package.json (${{ steps.getImageTag.outputs.result }} → ${{ inputs.value }})
      if: inputs.projectVersionFile == 'package.json'
      run: |
        echo "${{ steps.getImageTag.outputs.result }} -> ${{ inputs.value }}"
        sed -i -r 's/"version": "(.*)"/"version": "${{ inputs.value }}"/g' package.json

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: ${{ inputs.commitMessage }}
        commit_user_name: openbayes-bot
        commit_user_email: 94845780+openbayes-bot@users.noreply.github.com
        commit_author: openbayes-bot <94845780+openbayes-bot@users.noreply.github.com>
        branch: ${{ inputs.branch }}
        tagging_message: ${{ inputs.taggingMessage }}
